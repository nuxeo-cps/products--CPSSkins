<metal:block define-macro="head" 
  tal:define="portal_url here/portal_url;
              tmtool here/portal_themes;
              theme_url theme_container/absolute_url">
  <meta name="generator" content="CPSSkins 2.0" />
<!-- CSS1 -->
  <link rel="Stylesheet" type="text/css"
  tal:attributes="href string:${portal_url}/cpsskins_common.css" />
  <link rel="Stylesheet" type="text/css"
  tal:attributes="href string:${theme_url}/renderCSS" />
  <style type="text/css">
    body {background-color: #ffffff;}
    a {text-decoration: none; }
  </style>
<!-- JavaScript -->
  <script type="text/javascript" tal:attributes="src string:${theme_url}/renderJS"></script>
</metal:block>
<metal:block define-macro="main"
  tal:define="context_rurl python: '/' + utool.getRelativeUrl(here);
              align python: theme_container.align; 
	      marginleft python: align in ['right', 'center'] and 'auto' or '0px'; 
              marginright python: align in ['left', 'center'] and 'auto' or '0px'; 
              dummy python: request.set('cpsskins_mcat', mcat)"
    tal:repeat="pageblock python: theme_container.getPageBlocks()">
      <table cellpadding="0" cellspacing="0"
      tal:define="closed python: pageblock['closed'];
	          maxcols python: pageblock['maxcols']; 
                  pageblock_shape python: pageblock['shape']; 
                  pageblock_color python: pageblock['color'];
                  height python: pageblock['height'];
                  height_style python: height and 'height:%s' % height or ''"
      tal:condition="python: (not closed and maxcols)"
      tal:attributes="width python: pageblock['width'];
		      style python: 'margin-left:%s;; margin-right:%s;; %s' % (marginleft, marginright, height_style);
		      class python: (pageblock_shape and pageblock_color) and 'Shape%s Color%s' % (pageblock_shape, pageblock_color) or None;
                      summary python: pageblock['title']">
        <tr>
          <tal:block
            define="objects python: pageblock.getObjects(REQUEST=request)"
            repeat="x_pos python: range(int(maxcols))">
              <tal:block 
              define="objects_in_xpos python: objects.get(x_pos, None)"
              condition="objects_in_xpos">
                <td valign="top"
                tal:define="templets_in_xpos python: objects_in_xpos['templets'];
                            cellsize python: objects_in_xpos['cellsizer'];
                            cellstyle python: objects_in_xpos['cellstyler'];
			    cellclass python: cellstyle and 'Color%s' % cellstyle.color or None"
                 tal:attributes="class cellclass; 
		                 width python: cellsize and cellsize.cellwidth or None">
                  <tal:block condition="not:templets_in_xpos" 
                             content="structure string:&nbsp;" />
                  <tal:block repeat="templet templets_in_xpos">
                    <tal:block define="ismaincontent python: getattr(templet, 'ismaincontent', 0);
                                       isPortalBoxGroup python: getattr(templet, 'isportalboxgroup', 0);
                                       isESIFragment python: (esi_enabled and getattr(templet, 'esi_fragment', 0)) or 0;
                                       special_templet python: ismaincontent or isPortalBoxGroup or isESIFragment;
                                       rendered_templet python: not special_templet and templet.render_cache(shield=1) or nothing"
                    condition="python: rendered_templet not in ['', '\n']">
                    <div
                     tal:attributes="align python: templet.align; 
                                     style python: 'padding:%s' % templet.margin">
                      <div tal:attributes="class python: 'Color%s FontColor%s FontShape%s' % (templet.color, templet.fontcolor, templet.fontshape);
                                           style python: templet.getCSSLayoutStyle()">
                        <tal:block condition="not:special_templet"
                         content="structure rendered_templet" />
                      <esi:try tal:condition="isESIFragment">
                        <esi:attempt>
                          <esi:include tal:attributes="src string:${templet/absolute_url}/render?context_rurl=$context_rurl"
                           onerror="continue" />
                        </esi:attempt>
                        <esi:except>
                          <!--esi
                          This spot is reserved for something 
                          -->
                        </esi:except>
                      </esi:try>

                        <tal:block condition="ismaincontent">
<!-- BEGIN Main Content -->
                           <metal:block define-slot="maincontent" />
<!-- END Main Content -->
                           <br clear="all" />
                        </tal:block>
                        <tal:block condition="isPortalBoxGroup">
                          <tal:block define="render_box python:1;
                                             box_group templet/box_group|nothing">
                            <metal:block use-macro="here/cpsskins_lib/macros/portalboxgroup" />
                          </tal:block>
                        </tal:block>
                      </div>
                    </div>
                  </tal:block>
                  </tal:block>
                </td>
              </tal:block>
            </tal:block>
          </tr>
        </table>
</metal:block>
