<metal:block define-macro="head"
  tal:define="base_url python: here.cpsskins_getBaseUrl();
              theme_url python: base_url + utool.getRelativeUrl(theme_container)">
<tal:redirect condition="not:editing|nothing">
  <tal:block define="response request/RESPONSE;
                     dummy python:response.redirect(here_url + '/cpsskins_exit')" />
</tal:redirect>
<!-- CSS1 -->
  <link rel="Stylesheet" type="text/css"
  tal:attributes="href string:${base_url}cpsskins_common.css" />
  <link rel="Stylesheet" type="text/css"
  tal:attributes="href string:${theme_url}/renderCSS?editing=1" />
<!-- CSS2 -->
  <style type="text/css" media="all"
  tal:content="string: @import url(${base_url}cpsskins_common-css2.css);" />
<!-- JavaScript -->
  <script type="text/javascript" tal:attributes="src string:${here_url}/cpsskins_renderJS?theme=$current_theme"></script>
<!-- Shortcut icon -->
<tal:block content="structure theme_container/renderIcon" />
</metal:block>
<metal:block define-macro="main"
 tal:define="base_url python: here.cpsskins_getBaseUrl();
	  align python: theme_container.align; 
          edit_mode edit_mode|nothing;
          layout_edit_mode python: edit_mode == 'layout'; 
          mixed_edit_mode python: edit_mode == 'mixed'; 
          wysiwyg_edit_mode python: edit_mode == 'wysiwyg';
          edition_mode python: layout_edit_mode or wysiwyg_edit_mode or mixed_edit_mode;
	  marginleft python: align == 'left' and '0px' or 'auto'; 
          marginright python: align == 'right' and '0px' or 'auto'; 
	  pageblock_style python: 'margin-left:%s;; margin-right:%s;;' % (marginleft, marginright);
          context_rurl request/form/context_rurl|nothing;
          context_obj python: here.cpsskins_getContextObj(context_rurl);
          cpsskins_language here/cpsskins_getCurrentLang;
          mcat python: here.cpsskins_getlocalizer();
          dummy python: request.set('cpsskins_language', cpsskins_language);
          dummy python: request.set('cpsskins_mcat', mcat)">
  <metal:block define-slot="page_top" tal:replace="nothing">
  </metal:block>
  <tal:block 
  repeat="pageblock python: theme_container.getPageBlocks()">
    <metal:block define-slot="pageblock_titlebar"
    tal:replace="nothing"></metal:block>
    <table border="0" cellpadding="0" cellspacing="0"
    tal:define="closed python: pageblock['closed'];		 
                maxcols python: pageblock['maxcols']; 
                block_id python: pageblock['id'];
                block_rurl python: utool.getRelativeUrl(pageblock);
                block_url python: base_url + block_rurl;
                height python: pageblock['height'];
                height_style python: height and 'height:%s' % height or ''"
    tal:condition="python: (not closed and maxcols)"
    tal:attributes="width python: pageblock['width']; 
		    style string:$pageblock_style $height_style;
		    class python: pageblock.getCSSAreaClass();
                    summary python: pageblock['title']">
      <tr>
        <tal:block
          define="objects python: pageblock.getObjects(edit=layout_edit_mode)"
          repeat="x_pos python: range(int(maxcols))">
          <tal:block 
          define="objects_in_xpos python: objects.get(x_pos, None)"
          condition="objects_in_xpos">
            <td valign="top"
             tal:define="contents_in_xpos python: objects_in_xpos['contents'];
                         cellsize python: objects_in_xpos['cellsizer'];
                         cellstyle python: objects_in_xpos['cellstyler']"
             tal:attributes="class python: cellstyle and cellstyle.getCSSCellClass(level=2) or None;
                             width python: cellsize and cellsize.cellwidth or None">
              <metal:block define-slot="cell_top"
               tal:replace="nothing"></metal:block>
              <tal:block repeat="content contents_in_xpos">
                <metal:block define-slot="content_titlebar"
                 tal:replace="nothing"></metal:block>
                <div 
                   tal:define="ismaincontent python: getattr(content, 'ismaincontent', 0);
                               iscellblock python: getattr(content, 'iscellblock', 0);
                               isPortalBoxGroup python: getattr(content, 'isportalboxgroup', 0);
                               special_content python: ismaincontent or isPortalBoxGroup;
                               ypos python: content.getVerticalPosition();
		               hover_effect python: not ismaincontent;
                               boxdragclass python: not ismaincontent and (not iscellblock or layout_edit_mode) and 'ContentBoxDrag' or '';
                               boxeditmenuclass python: (not ismaincontent and (not iscellblock or context != content)) and 'ContentBoxEditMenu' or '';"
                   tal:attributes="class boxdragclass">
                  <div tal:attributes="xpos x_pos;
                                       ypos ypos; 
                                       class python: (not ismaincontent and (not iscellblock or layout_edit_mode)) and 'ContentDest' or '';
                                       block_url block_url;
                                       dest_block block_rurl">
                    <div
                    tal:define="content_title python: content.title;
                                content_here python: content == here;
		                visible python: content.getVisibility(context_obj=context_obj); 
				render_content python: not layout_edit_mode and not special_content; 
                                render_as_title python: layout_edit_mode and not ismaincontent and not render_content;
                                boxeditclass python: (not ismaincontent and (mixed_edit_mode or layout_edit_mode)) and 'TempletBoxBodyLayout' or 'TempletBoxBody'; 
				boxeditclass python: content_here and 'TempletBoxBodySelected' or boxeditclass; 
				class python: edition_mode and boxeditclass or nothing; 
				style python: 'padding:%s;;' % content.margin;
				style python: hover_effect and style + 'cursor: crosshair;;' or style;
                                content_class python: content.getCSSAreaClass(level=2);
                                styles_list python: content.getApplicableStyles();
                                align_list content/AlignList|nothing"
                     tal:condition="python: special_content or render_content or render_as_title or layout_edit_mode"
                     tal:attributes="align python: content.align;
                                     style style;
	                             class string: $class $boxdragclass $boxeditmenuclass; 
                                     contenturl python: base_url + utool.getRelativeUrl(content); 
                                     styles python: '|'.join([s['meta_type'] for s in styles_list]);
                                     isalignable python: content.isAlignable();
                                     alignments python: '|'.join(align_list);
                                     icon python: '/' + content.getIcon();
                                     title python: not ismaincontent and content_title or None;
                                     edit_mode edit_mode;
                                     theme current_theme;">
                      <tal:block
                       condition="render_as_title"
                       content="structure string:${content/title}&nbsp;" />
                      <div tal:condition="not:render_as_title"
                           tal:attributes="class content_class; 
	                                   style python: content.getCSSLayoutStyle()">
                        <tal:block condition="render_content"
                         content="structure python: content.render_cache(shield=1, context_obj=context_obj, editing=1)" />
                        <tal:block condition="ismaincontent">
<!-- BEGIN Main Content -->
                          <metal:block define-slot="maincontent" />
                          <metal:block 
                           define-slot="main_edit_content" />
                          <br clear="all" />
<!-- END Main Content -->
                        </tal:block>
                        <tal:block condition="python: isPortalBoxGroup and not layout_edit_mode">
                          <tal:block define="box_group content/box_group|nothing;
                                             render_box python: 0">
                            <metal:block use-macro="here/cpsskins_lib/macros/portalboxgroup" />
                          </tal:block>
                        </tal:block>
                      </div>
                    </div>
                  </div>
                </div>
                <metal:block define-slot="content_footer"
                tal:replace="nothing"></metal:block>
              </tal:block>
              <metal:block define-slot="cell_bottom"
               tal:replace="nothing"></metal:block>
            </td>
          </tal:block>
        </tal:block>
      </tr>
    </table>
  </tal:block>
  <metal:block use-macro="here/cpsskins_theme_widgets/macros/contextual_menu" />
  <metal:block define-slot="page_footer" tal:replace="nothing">
  </metal:block>
</metal:block>
