<metal:block define-macro="head"
  tal:define="base_url python: here.cpsskins_getBaseUrl();
              theme_url python: base_url + utool.getRelativeUrl(theme_container)">
<tal:block content="structure python:theme_container.renderIcon()" />
<!-- CSS1 -->
<link rel="Stylesheet" type="text/css"
 tal:attributes="href string:${base_url}cpsskins_common.css" />
<link rel="Stylesheet" type="text/css"
 tal:attributes="href string:${theme_url}/renderCSS?editing=1" />
<!-- CSS2 -->
<style type="text/css" media="all"
 tal:content="string:@import url(${base_url}cpsskins_common-css2.css);" />
<tal:comment replace="structure string:&lt;!--[if IE]&gt;" />
<link rel="stylesheet" type="text/css"
 tal:attributes="href string:${base_url}cpsskins_msie.css" />
<tal:comment replace="structure string:&lt;![endif]--&gt;" />
<!-- JavaScript -->
<script type="text/javascript" tal:attributes="src string:${theme_url}/renderJS?page=$current_page"></script>
<script type="text/javascript" tal:attributes="src string:${here_url}/cpsskins_renderJS?theme=$current_theme&amp;page=$current_page"></script>
</metal:block>
<metal:block define-macro="main" tal:condition="nocall:page_container">
  <tal:block define="
    base_url python: here.cpsskins_getBaseUrl();
    panel panel|string:wysiwyg;
    layout_panel python: panel == 'layout'; 
    mixed_panel python: panel == 'mixed'; 
    wysiwyg_panel python: panel == 'wysiwyg';
    pageblock_style python: page_container.getCSSLayoutStyle();
    context_obj python: tmtool.getContextObj(here);
    cpsskins_language tmtool/getCurrentLang;
    mcat python: tmtool.getTranslationService(cat='cpsskins');
    dummy python: request.set('cpsskins_language', cpsskins_language);
    dummy python: request.set('cpsskins_mcat', mcat);
    dummy python: request.set('cpsskins_base_url', base_url)">

  <tal:block condition="layout_panel" define="pageblock_ypos python: 0">
    <metal:block use-macro="here/cpsskins_theme_widgets/macros/add_pageblock" />
  </tal:block>

  <tal:block 
  repeat="pageblock python: page_container.getPageBlocks(filter=0)">

    <tal:block condition="not:wysiwyg_panel">
      <a tal:attributes="name pageblock/id"></a>
      <metal:block use-macro="here/cpsskins_theme_widgets/macros/pageblock_titlebar" />
    </tal:block>

    <table border="0" cellpadding="0" cellspacing="0" summary=""
    tal:define="closed python: pageblock['closed'];
                maxcols python: pageblock['maxcols']; 
                block_id python: pageblock['id'];
                block_rurl python: utool.getRelativeUrl(pageblock);
                block_url python: base_url + block_rurl"
    tal:condition="python: (not closed and maxcols)"
    tal:attributes="style python: pageblock.getCSSLayoutStyle(pageblock_style);
                    class python: pageblock.getCSSClass();
                    summary python: pageblock['title']">
      <tr>
        <tal:block
          define="objects python: pageblock.getObjects(edit=layout_panel, context_obj=context_obj)"
          repeat="x_pos python: range(int(maxcols))">
          <tal:block 
          define="objects_in_xpos python: objects.get(x_pos, None)"
          condition="objects_in_xpos">
            <td valign="top"
             tal:define="contents_in_xpos python: objects_in_xpos['contents'];
                         cellsize python: objects_in_xpos['cellsizer'];
                         cellstyle python: objects_in_xpos['cellstyler']"
             tal:attributes="class python: cellstyle and cellstyle.getCSSClass(level=2) or None;
                             width python: cellsize and cellsize.cellwidth or None">

              <tal:block condition="not:wysiwyg_panel">
                <metal:block use-macro="here/cpsskins_theme_widgets/macros/cellsizer" />
                <metal:block use-macro="here/cpsskins_theme_widgets/macros/movecell" />
                <tal:block condition="not:contents_in_xpos">
                  <metal:block use-macro="here/cpsskins_theme_widgets/macros/insert_content" />
                </tal:block>
              </tal:block>
              <tal:block condition="not:contents_in_xpos">
                <metal:block use-macro="here/cpsskins_theme_widgets/macros/emptycell" />
              </tal:block>

              <tal:block repeat="content contents_in_xpos">
                <div tal:condition="python: content.getId() == selected_content"
                 class="templetBoxTitleSelected">
                  <metal:block use-macro="here/cpsskins_theme_widgets/macros/content_titlebar" />
                </div>

                <div 
                   tal:define="iscellblock python: getattr(content, 'iscellblock', 0);
                               isPortalBoxGroup python: getattr(content, 'isportalboxgroup', 0);
                               special_content isPortalBoxGroup;
                               ypos python: content.getVerticalPosition();
                               boxdragclass python: (not iscellblock or layout_panel) and 'ContentBoxDrag' or '';
                               boxeditmenuclass python: (not iscellblock or context != content) and 'ContextualMenu' or '';"
                   tal:attributes="class boxdragclass">
                  <div tal:attributes="xpos x_pos;
                                       ypos ypos; 
                                       class python: (not iscellblock or layout_panel) and 'contentDest' or '';
                                       block_url block_url;
                                       dest_block block_rurl">
                    <div
                    tal:define="content_title python: content.title;
                                content_here python: content.getId() == selected_content;
		                visible python: content.getVisibility(context_obj=context_obj); 
				render_content python: not layout_panel and not special_content; 
                                render_as_title python: layout_panel and not render_content;
                                boxeditclass python: not wysiwyg_panel and 'templetBoxBodyLayout' or 'templetBoxBody'; 
				boxeditclass python: content_here and 'templetBoxBodySelected' or boxeditclass; 
				class boxeditclass; 
				style python: content.getCSSMarginStyle() or '';
				style python: style + ';;cursor: crosshair';
                                content_class python: content.getCSSClass(level=2);
                                styles_list python: content.getApplicableStyles();
                                align_list content/listHorizontalAlignments|nothing"
                     tal:condition="python: special_content or render_content or render_as_title or layout_panel"
                     tal:attributes="style style;
		                     xpos x_pos;
				     ypos ypos;
	                             class string:$class $boxdragclass $boxeditmenuclass; 
                                     blockurl block_url;
                                     contenturl python: base_url + utool.getRelativeUrl(content); 
                                     styles python: '|'.join([s['meta_type'] for s in styles_list]);
                                     haslayout python: 1;
                                     isalignable python: content.isAlignable();
                                     alignments python: '|'.join(align_list);
                                     icon python: '/' + content.getIcon();
                                     title content_title;
                                     panel panel;
                                     theme current_theme;">
                      <tal:block
                       condition="render_as_title"
                       content="structure string:${content/title}&nbsp;" />
                      <div tal:condition="not:render_as_title"
                           tal:attributes="class content_class; 
                                           style python: content.getCSSLayoutStyle()">
                        <tal:block condition="render_content"
                         content="structure python: content.render_cache(shield=shield, context_obj=context_obj, editing=1, view_mode=view_mode)" />
                        <tal:block condition="python: isPortalBoxGroup and not layout_panel">
                          <tal:block define="box_group content/box_group|nothing;
                                             render_box python: 0">
                            <metal:block use-macro="here/cpsskins_lib/macros/portalboxgroup" />
                          </tal:block>
                        </tal:block>
                      </div>
                    </div>
                  </div>
                </div>

                <tal:block condition="not:wysiwyg_panel">
                  <metal:block use-macro="here/cpsskins_theme_widgets/macros/insert_content" />
                </tal:block>
              </tal:block>

              <tal:block condition="not:wysiwyg_panel">
                <metal:block use-macro="here/cpsskins_theme_widgets/macros/cellstyler" />
                <metal:block use-macro="here/cpsskins_theme_widgets/macros/cellhider" />
              </tal:block>

            </td>
          </tal:block>
        </tal:block>
      </tr>
    </table>
  </tal:block>

  <tal:block condition="layout_panel">
    <metal:block use-macro="here/cpsskins_theme_widgets/macros/add_pageblock" />
  </tal:block>

  <metal:block use-macro="here/cpsskins_theme_widgets/macros/contextual_menu" />

  <!-- Begin pdlib footer -->
  <div id="drag-feedback-box"></div>
  <script type="text/javascript"><!-- 
   pd_setupPage();
  // --></script>
  <!-- End pdlib footer -->
  </tal:block>
</metal:block>
